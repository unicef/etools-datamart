# Generated by Django 2.1.5 on 2019-01-21 17:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0009_alter_user_last_name_max_length'),
        ('unicef_rest_framework', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='userservicetoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='useraccesscontrol',
            name='last_modify_user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='useraccesscontrol',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.Service'),
        ),
        migrations.AddField(
            model_name='useraccesscontrol',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acl', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='systemfilterparam',
            name='filter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.SystemFilter'),
        ),
        migrations.AddField(
            model_name='systemfilterfieldrule',
            name='filter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='unicef_rest_framework.SystemFilter'),
        ),
        migrations.AddField(
            model_name='systemfilter',
            name='application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.Application'),
        ),
        migrations.AddField(
            model_name='systemfilter',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group'),
        ),
        migrations.AddField(
            model_name='systemfilter',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.Service'),
        ),
        migrations.AddField(
            model_name='systemfilter',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='service',
            name='last_modify_user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='service',
            name='linked_models',
            field=models.ManyToManyField(blank=True, help_text='models that the service depends on', related_name='_service_linked_models_+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='service',
            name='source_model',
            field=models.ForeignKey(blank=True, help_text='model used as primary datasource', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='groupaccesscontrol',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acl', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='groupaccesscontrol',
            name='last_modify_user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupaccesscontrol',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.Service'),
        ),
        migrations.AddField(
            model_name='application',
            name='last_modify_user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='application',
            name='services',
            field=models.ManyToManyField(blank=True, help_text='allowed services', to='unicef_rest_framework.Service'),
        ),
        migrations.AddField(
            model_name='application',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CacheVersion',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('unicef_rest_framework.service',),
        ),
        migrations.AlterUniqueTogether(
            name='useraccesscontrol',
            unique_together={('user', 'service')},
        ),
        migrations.AlterUniqueTogether(
            name='systemfilterparam',
            unique_together={('filter', 'param')},
        ),
        migrations.AlterUniqueTogether(
            name='systemfilterfieldrule',
            unique_together={('filter', 'field')},
        ),
        migrations.AlterUniqueTogether(
            name='systemfilter',
            unique_together={('service', 'group'), ('service', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='groupaccesscontrol',
            unique_together={('group', 'service')},
        ),
    ]
