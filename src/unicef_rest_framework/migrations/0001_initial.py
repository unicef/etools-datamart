# Generated by Django 3.2.12 on 2022-03-12 17:14

import uuid

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import concurrency.fields
import strategy_field.fields

import unicef_rest_framework.models.acl


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('django_celery_beat', '0015_edit_solarschedule_events_choices'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', unique=True)),
                ('last_modify_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField()),
                ('allowed_ip', models.CharField(default='.*', help_text='Regex to validate remote IP', max_length=255)),
                ('all_services', models.BooleanField(default=False, help_text='allow any service, even future created')),
                ('last_modify_user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', unique=True)),
                ('last_modify_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, help_text='unique service name', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('viewset', strategy_field.fields.StrategyClassField(db_index=True, help_text='class FQN', unique=True)),
                ('basename', models.CharField(help_text='viewset basename', max_length=200)),
                ('suffix', models.CharField(help_text='url suffix', max_length=200)),
                ('url_name', models.CharField(help_text='url name as per drf reverse', max_length=300)),
                ('access', models.IntegerField(choices=[(0, 'Open'), (2, 'Login required'), (4, 'Access Restricted'), (8, 'Business authorization needed')], default=2, help_text='Required privileges')),
                ('confidentiality', models.IntegerField(choices=[(1, 'Strictly Confidential'), (2, 'Confidential'), (3, 'Internal'), (4, 'Internal UN'), (5, 'Public')], default=3)),
                ('hidden', models.BooleanField(default=False)),
                ('cache_version', models.IntegerField(default=1)),
                ('cache_ttl', models.CharField(default='1d', max_length=5)),
                ('cache_key', models.CharField(blank=True, help_text='Key used to invalidate service cache', max_length=1000, null=True)),
                ('last_modify_user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('linked_models', models.ManyToManyField(blank=True, help_text='models that the service depends on', related_name='_unicef_rest_framework_service_linked_models_+', to='contenttypes.ContentType')),
                ('source_model', models.ForeignKey(blank=True, help_text='model used as primary datasource', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name_plural': 'Services',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='SystemFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('handler', models.CharField(default='unicef_rest_framework.models.filter.SystemFilterHandler', max_length=500)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.application')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.service')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('service', 'user'), ('service', 'group')},
            },
        ),
        migrations.CreateModel(
            name='UserServiceToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=1000)),
                ('expires', models.DateField(blank=True, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Preload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200)),
                ('params', models.JSONField(blank=True, default=dict, null=True)),
                ('enabled', models.BooleanField(blank=True, default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('response_length', models.IntegerField(blank=True, null=True)),
                ('response_ms', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='ms')),
                ('etag', models.CharField(blank=True, max_length=300, null=True)),
                ('as_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PeriodicTask',
            fields=[
                ('periodictask_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_celery_beat.periodictask')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='periodic_tasks', to='unicef_rest_framework.service')),
            ],
            bases=('django_celery_beat.periodictask',),
        ),
        migrations.AddField(
            model_name='application',
            name='services',
            field=models.ManyToManyField(blank=True, help_text='allowed services', to='unicef_rest_framework.Service'),
        ),
        migrations.AddField(
            model_name='application',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CacheVersion',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('unicef_rest_framework.service',),
        ),
        migrations.CreateModel(
            name='UserAccessControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', unique=True)),
                ('last_modify_date', models.DateTimeField(auto_now=True)),
                ('rate', models.CharField(default='*', max_length=50)),
                ('serializers', django.contrib.postgres.fields.ArrayField(base_field=unicef_rest_framework.models.acl.SerializerField(max_length=200), blank=True, default=unicef_rest_framework.models.acl.default_serializer, size=None)),
                ('policy', models.IntegerField(choices=[(0, 'Forbid'), (1, 'Grant'), (2, 'Default')], db_index=True)),
                ('last_modify_user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acl', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User ACL',
                'verbose_name_plural': 'User ACLs',
                'ordering': ('user', 'service'),
                'unique_together': {('user', 'service')},
            },
        ),
        migrations.CreateModel(
            name='SystemFilterParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param', models.CharField(max_length=300)),
                ('value', models.CharField(blank=True, max_length=300, null=True)),
                ('filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.systemfilter')),
            ],
            options={
                'unique_together': {('filter', 'param')},
            },
        ),
        migrations.CreateModel(
            name='SystemFilterFieldRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=500)),
                ('value', models.CharField(blank=True, max_length=300, null=True)),
                ('override_field', models.BooleanField(default=False)),
                ('filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='unicef_rest_framework.systemfilter')),
            ],
            options={
                'unique_together': {('filter', 'field')},
            },
        ),
        migrations.CreateModel(
            name='GroupAccessControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', unique=True)),
                ('last_modify_date', models.DateTimeField(auto_now=True)),
                ('rate', models.CharField(default='*', max_length=50)),
                ('serializers', django.contrib.postgres.fields.ArrayField(base_field=unicef_rest_framework.models.acl.SerializerField(max_length=200), blank=True, default=unicef_rest_framework.models.acl.default_serializer, size=None)),
                ('policy', models.IntegerField(choices=[(0, 'Forbid'), (1, 'Grant'), (2, 'Default')], db_index=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acl', to='auth.group')),
                ('last_modify_user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unicef_rest_framework.service')),
            ],
            options={
                'verbose_name': 'Group ACL',
                'verbose_name_plural': 'Group ACLs',
                'ordering': ('group', 'service'),
                'unique_together': {('group', 'service')},
            },
        ),
        migrations.CreateModel(
            name='Export',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200)),
                ('params', models.JSONField(blank=True, default=dict, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('response_length', models.IntegerField(blank=True, null=True)),
                ('response_ms', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='ms')),
                ('etag', models.CharField(blank=True, max_length=300, null=True)),
                ('name', models.CharField(max_length=100)),
                ('format', models.CharField(choices=[('text/plain', 'txt'), ('text/csv', 'csv'), ('application/xlsx', 'xlsx'), ('application/json', 'json')], max_length=30)),
                ('refresh', models.BooleanField(default=False, help_text='If true data are refreshed every day')),
                ('enabled', models.BooleanField(blank=True, default=False)),
                ('filename', models.CharField(help_text='Optional file name', max_length=100)),
                ('save_as', models.BooleanField(default=False, help_text='If true, DataMart will try to force "SaveAs" popup. Note that popup will be displayed in any case if browser do not natively support requested format')),
                ('notify', models.BooleanField(default=False, help_text='Send me an email when file is available')),
                ('as_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
                'unique_together': {('url', 'as_user', 'params', 'format')},
            },
        ),
    ]
